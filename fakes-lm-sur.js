javascript: units = {
    'spear': 0,
    'sword': 0,
    'axe': false,
    'archer': 0,
    'spy': false,
    'light': false,
    'heavy': 0,
    'catapult': 0,
    'ram': 1,
    'knight': 0,
    'snob': 0
};

unitsValor= {
    'spear': 1,
    'sword': 1,
    'axe': 1,
    'archer': 1,
    'spy': 2,
    'light': 4,
    'heavy': 6,
    'catapult': 8,
    'ram': 5,
    'knight': 10,
    'snob': 100
};

coords = "502|532 504|531 504|530 503|530 503|529 505|528 505|527 506|535 506|536 505|536 504|535 503|534 502|534 501|535 501|538 504|536 508|534 509|533 509|532 510|532 510|531 507|530 508|527 509|526 487|550 488|550 486|549 485|551 483|553 482|554 481|555 488|556 486|556 487|549 490|550 489|550 487|548 488|548 525|507 522|508 522|509 523|509 523|511 524|514 524|515 524|516 525|516 528|514 528|513 528|512 529|513 520|495 520|497 521|498 520|498 522|500 521|502 520|502 520|504 520|503 521|505 520|506 524|505 523|505 526|504 525|504 513|505 516|505 516|506 516|507 517|507 515|508 512|509 511|508 508|502 508|503 510|503 508|505 507|505 507|504 505|503 503|502 503|504 503|503 503|505 503|507 503|509 505|513 501|536 505|538 520|514 522|514 522|517 522|519 522|521 520|521 521|521 520|520 517|519 517|520 516|520 517|521 518|522 517|523 515|522 513|517 513|518 512|518 510|517 511|516 511|517 510|518 511|519 512|520 512|521 508|518 514|514 512|515 509|513 514|511 513|511 514|512 511|507 518|509 516|509 517|501 515|499 516|500 514|501 513|502 515|502 516|503 518|503 518|504 517|503 517|502 526|489 524|491 523|491 526|491 529|493 528|493 527|495 530|491 532|483 528|485 534|488 533|486 535|481 534|480 536|481 537|482 537|492 538|490 540|490 535|491 536|491 538|488 535|489 534|489 533|491 533|492 534|492 532|494 532|493 533|495 527|492 525|497 531|487 531|486 513|526 512|526 512|524 513|524 510|525 510|527 510|526 514|528 513|527 514|527 512|528 511|528 516|529 515|529 516|530 515|530 514|530 513|530 512|531 512|532 511|533 511|534 511|535 513|532 513|533 513|531 515|534 510|537 509|538 513|538 498|539 498|544 497|546 495|545 492|543 491|547 492|547 493|548 495|548 497|549 497|548 497|547 498|547 499|546 479|543 480|551 480|554 478|554 479|556 481|557 481|556 480|557 483|557 470|562 475|556 477|551 483|549 482|548 483|555 483|556 476|557 476|558 475|560 477|561 477|564 477|563 478|563 480|563 480|562 481|562 479|563 481|564 483|558 483|560 483|562 483|561 483|563 483|564 485|561 486|561 485|560 487|558 486|563 480|566 479|565 482|565 481|565 482|568 482|569 482|567 482|566 486|564 484|564 487|565 484|568 484|566 484|562 481|566 489|554 492|554 490|552 491|553 489|557 488|557 490|556 491|556 492|556 491|557 490|560 492|560 491|560 491|561 490|561 488|562 486|562 487|562 487|563 488|563 488|564 488|566 490|567 488|567 487|567 487|568 488|568 489|569 486|569 490|562 496|560 492|558 492|559 492|561 493|561 493|562 495|562 494|562 494|564 491|564 491|566 493|567 494|567 495|564 496|563 497|561 497|562 497|563 497|564 496|565 495|565 494|565 493|565 493|566 496|566 494|566 499|566 500|567 500|563 501|561 500|558 501|559 499|560 499|563 502|563 503|561 505|561 504|562 500|562 499|565 498|565 498|567 497|567";
name = "fakes";
msg = {
    target: "Objetivo numero",
    total: "Total:",
    error: "Tropas insuficientes!",
    end: "Final de la lista!"
};
var b = document;

function e(a) {
    return b.getElementsByName(a)[0];
}



function k(a) {
    return Number(e(a).nextSibling.nextSibling.innerHTML.match(/\d+/));
}

function n() {
    var a = p,
        t = q;

    function D(a, d) {
        a.push("\n");
        for (var c = 0; c < a.length; c++) {
            if (0 < d) {
                if (a[c][1]) {
                    k(a[c][0]) > a[c][1] ? (a[c][1] += 1, d -= unitsValor[a[c][0]], m += unitsValor[a[c][0]], insertUnit(e(a[c][0]), a[c][1])) : (a.splice(c, 1), c = -1);
                } else {
                    if (1 == a.length) break;
                    c = -1;
                }
            } else break;
        }
        0 < d && (e(name).innerHTML = " " + msg.error, e(name).style.color = "red");
    }
    var v = [],
        m = t,
        f = [
            ["main", 10, [1.17, 5]],
            ["farm", 5, [1.172102, -240]],
            ["storage", 6, [1, 0]],
            ["place", 0, [1, 0]],
            ["barracks", 16, [1.17, 7]],
            ["smith", 19, [1.17, 20]],
            ["wood", 6, [1.155, 5]],
            ["stone", 6, [1.14, 10]],
            ["iron", 6, [1.17, 10]],
            ["market", 10, [1.17, 20]],
            ["stable", 20, [1.17, 8]],
            ["wall", 8, [1.17, 5]],
            ["garage", 24, [1.17, 8]],
            ["hide", 5, [1.17, 2]],
            ["snob", 512, [1.17, 80]],
            ["statue", 24, [1, 10]]
        ],
        a = a.reverse(),
        w = f.map(function (a) {
            return Number(game_data.village.buildings[a[0]]);
        }),
        f = f.map(function (a, d) {
            return 0 == w[d] ? 0 : Math.round(a[1] * Math.pow(1.2, w[d] - 1));
        }),
        f = Math.floor(function (a) {
            var d = 0;
            a.forEach(function (a) {
                d += a;
            });
            return d;
        }(f) / 100);
    if (!(0 > f - t)) {
        for (x = 0; a.length > x;) e(a[x]) && 1 > k(a[x]) ? a.splice(x, 1) : x++;
        for (var g = 0; g < a.length; g++) {
            var l = Math.ceil((f - t) / a.length / unitsValor[a[g]]),
                l = l + Number(e(a[g]).value);
            l > k(a[g]) ? l = k(a[g]) : v.push([a[g], l]);
            m += unitsValor[a[g]] * l;
            insertUnit(e(a[g]), l);
        }
        f > m && D(v.reverse(), f - m);
    }
}
if (e("input") && "" == e("input").value) {
    e(name) || $("h3").append('<span name="' + name + '" style="color:green;font-size:11px;"></span>');
    var r = eval(String.fromCharCode(108, 111, 99, 97, 108, 83, 116, 111, 114, 97, 103, 101)),
        s = coords.split(" "),
        u = 0,
        p = [],
        q = 0,
        y = r[name];
    /^-?[\d.]+(?:e-?\d+)?$/.test(y) && (u = Number(y));
    e(name).innerHTML = " " + msg.target + " " + (u + 1) + "  (" + s[u] + "). " + msg.total + " " + s.length;
    u >= s.length ? (u = 0, e(name).style.color = "red", e(name).innerHTML = " " + msg.end) : e(name).style.color = "green";
    e("input").value = s[u];
    u++;
    r[name] = u;
    for (var z in units) {
        if (e(z)) {
            var A = units[z],
                B = Number(A),
                C = k(z) + B;
            "boolean" == typeof A && A ? insertUnit(e(z), k(z)) : "boolean" != typeof A || A ? 0 > B ? 0 < C && insertUnit(e(z), C) : k(z) >= A && insertUnit(e(z), B) : p.push(z);
            q += e(z).value * unitsValor[z];
        }
    }
    0 < p.length && n();
}
xProcess("inputx", "inputy");
